import { Injectable } from '@angular/core';
import { CLIENTES } from './clientes.json';  //
import { Cliente } from './cliente';  //
import { Observable } from 'rxjs'; //3
import { of } from 'rxjs'; //5

//1.-INDICA QUE TIPO DE CLASE Y ROL TIENE EN ANGULAR. INJECTABLE ES PARA CLASES DE SERVICIO Y SE PUEDEN INYECTAR A OTROS COMPONENTES.
//2.-ESTE MÉTODO DEVUELVE EL LISTADO DE CLIENTES QUE ESTÁ EN LA CONSTANTE

//CLASE 308 ...
//SE MODIFICA EL getClientes YA QUE HAY QUE USAR PROGRAMACIÓN REACTIVA PARA QUE EL MÉTODO SEA ASINCRONO. ESTO, PARA QUE NO SE BLOQUEE EL LADO DEL CLIENTE MIENTRAS SE HACE LA PETICIÓN AL BACKEND
//3.-SE IMPORTA OBSERVABLE
//4.-MODIFICACION DEL MÉTODO
//5.-SE IMPORTA MÉTODO OF DEL API REACTIVE EXTENTION.
//5.1.-EL OF SE USA PARA CONVERTIR EL LISTADO DE CLIENTES EN UN OBSERVABLE. UN FLUJO DE DATOS. ESTA WEA SE HACE PARA QUE ESTEN COMUNICADOS TODO EL TIEMPO EL FRONT Y EL BACK. DE ESTA FORMA, SI EN EL BACK HAY ALGÚN CAMBIO, ESTE SE REFLEJARÁ INSTANTANEAMENTE EN EL FRONT. 

//1
@Injectable()
export class ClienteService {

  constructor() { }

  //2 //4
  getClientes(): Observable <Cliente[]>{
    //5.1
    return of(CLIENTES);
  }


}
